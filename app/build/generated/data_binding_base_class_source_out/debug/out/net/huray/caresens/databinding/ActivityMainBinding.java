// Generated by view binder compiler. Do not edit!
package net.huray.caresens.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.huray.caresens.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button btnDisconnect;

  @NonNull
  public final Button btnDownloadAll;

  @NonNull
  public final Button btnDownloadGreaterOrEqual;

  @NonNull
  public final Button btnStartScan;

  @NonNull
  public final Button btnStopScan;

  @NonNull
  public final Button btnTimeSync;

  @NonNull
  public final CheckBox checkAutoConnect;

  @NonNull
  public final EditText edtSequenceDownloadFrom;

  @NonNull
  public final LinearLayout layoutButton;

  @NonNull
  public final LinearLayout layoutDeviceInfo;

  @NonNull
  public final ListView listviewScannedDevices;

  @NonNull
  public final RadioButton radioMgdl;

  @NonNull
  public final RadioButton radioMmoll;

  @NonNull
  public final TextView txtDeviceName;

  @NonNull
  public final TextView txtListviewHeader;

  @NonNull
  public final TextView txtResult;

  @NonNull
  public final TextView txtScanningMsg;

  @NonNull
  public final TextView txtSerialNum;

  @NonNull
  public final TextView txtSoftwareVersion;

  @NonNull
  public final TextView txtTotalCount;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnBack,
      @NonNull Button btnDisconnect, @NonNull Button btnDownloadAll,
      @NonNull Button btnDownloadGreaterOrEqual, @NonNull Button btnStartScan,
      @NonNull Button btnStopScan, @NonNull Button btnTimeSync, @NonNull CheckBox checkAutoConnect,
      @NonNull EditText edtSequenceDownloadFrom, @NonNull LinearLayout layoutButton,
      @NonNull LinearLayout layoutDeviceInfo, @NonNull ListView listviewScannedDevices,
      @NonNull RadioButton radioMgdl, @NonNull RadioButton radioMmoll,
      @NonNull TextView txtDeviceName, @NonNull TextView txtListviewHeader,
      @NonNull TextView txtResult, @NonNull TextView txtScanningMsg, @NonNull TextView txtSerialNum,
      @NonNull TextView txtSoftwareVersion, @NonNull TextView txtTotalCount) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnDisconnect = btnDisconnect;
    this.btnDownloadAll = btnDownloadAll;
    this.btnDownloadGreaterOrEqual = btnDownloadGreaterOrEqual;
    this.btnStartScan = btnStartScan;
    this.btnStopScan = btnStopScan;
    this.btnTimeSync = btnTimeSync;
    this.checkAutoConnect = checkAutoConnect;
    this.edtSequenceDownloadFrom = edtSequenceDownloadFrom;
    this.layoutButton = layoutButton;
    this.layoutDeviceInfo = layoutDeviceInfo;
    this.listviewScannedDevices = listviewScannedDevices;
    this.radioMgdl = radioMgdl;
    this.radioMmoll = radioMmoll;
    this.txtDeviceName = txtDeviceName;
    this.txtListviewHeader = txtListviewHeader;
    this.txtResult = txtResult;
    this.txtScanningMsg = txtScanningMsg;
    this.txtSerialNum = txtSerialNum;
    this.txtSoftwareVersion = txtSoftwareVersion;
    this.txtTotalCount = txtTotalCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      Button btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_disconnect;
      Button btnDisconnect = rootView.findViewById(id);
      if (btnDisconnect == null) {
        break missingId;
      }

      id = R.id.btn_download_all;
      Button btnDownloadAll = rootView.findViewById(id);
      if (btnDownloadAll == null) {
        break missingId;
      }

      id = R.id.btn_download_greater_or_equal;
      Button btnDownloadGreaterOrEqual = rootView.findViewById(id);
      if (btnDownloadGreaterOrEqual == null) {
        break missingId;
      }

      id = R.id.btn_start_scan;
      Button btnStartScan = rootView.findViewById(id);
      if (btnStartScan == null) {
        break missingId;
      }

      id = R.id.btn_stop_scan;
      Button btnStopScan = rootView.findViewById(id);
      if (btnStopScan == null) {
        break missingId;
      }

      id = R.id.btn_time_sync;
      Button btnTimeSync = rootView.findViewById(id);
      if (btnTimeSync == null) {
        break missingId;
      }

      id = R.id.check_auto_connect;
      CheckBox checkAutoConnect = rootView.findViewById(id);
      if (checkAutoConnect == null) {
        break missingId;
      }

      id = R.id.edt_sequence_download_from;
      EditText edtSequenceDownloadFrom = rootView.findViewById(id);
      if (edtSequenceDownloadFrom == null) {
        break missingId;
      }

      id = R.id.layout_button;
      LinearLayout layoutButton = rootView.findViewById(id);
      if (layoutButton == null) {
        break missingId;
      }

      id = R.id.layout_device_info;
      LinearLayout layoutDeviceInfo = rootView.findViewById(id);
      if (layoutDeviceInfo == null) {
        break missingId;
      }

      id = R.id.listview_scanned_devices;
      ListView listviewScannedDevices = rootView.findViewById(id);
      if (listviewScannedDevices == null) {
        break missingId;
      }

      id = R.id.radio_mgdl;
      RadioButton radioMgdl = rootView.findViewById(id);
      if (radioMgdl == null) {
        break missingId;
      }

      id = R.id.radio_mmoll;
      RadioButton radioMmoll = rootView.findViewById(id);
      if (radioMmoll == null) {
        break missingId;
      }

      id = R.id.txt_device_name;
      TextView txtDeviceName = rootView.findViewById(id);
      if (txtDeviceName == null) {
        break missingId;
      }

      id = R.id.txt_listview_header;
      TextView txtListviewHeader = rootView.findViewById(id);
      if (txtListviewHeader == null) {
        break missingId;
      }

      id = R.id.txt_result;
      TextView txtResult = rootView.findViewById(id);
      if (txtResult == null) {
        break missingId;
      }

      id = R.id.txt_scanning_msg;
      TextView txtScanningMsg = rootView.findViewById(id);
      if (txtScanningMsg == null) {
        break missingId;
      }

      id = R.id.txt_serial_num;
      TextView txtSerialNum = rootView.findViewById(id);
      if (txtSerialNum == null) {
        break missingId;
      }

      id = R.id.txt_software_version;
      TextView txtSoftwareVersion = rootView.findViewById(id);
      if (txtSoftwareVersion == null) {
        break missingId;
      }

      id = R.id.txt_total_count;
      TextView txtTotalCount = rootView.findViewById(id);
      if (txtTotalCount == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnBack, btnDisconnect,
          btnDownloadAll, btnDownloadGreaterOrEqual, btnStartScan, btnStopScan, btnTimeSync,
          checkAutoConnect, edtSequenceDownloadFrom, layoutButton, layoutDeviceInfo,
          listviewScannedDevices, radioMgdl, radioMmoll, txtDeviceName, txtListviewHeader,
          txtResult, txtScanningMsg, txtSerialNum, txtSoftwareVersion, txtTotalCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
